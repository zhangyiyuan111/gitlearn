{"uid":"c19419246e84c284","name":"test_token","fullName":"testcases.user_manager.test_api.Test_api#test_get_token","historyId":"431f1b3a5fae0e252b2fff8641dcc458","time":{"start":1655043317098,"stop":1655043317226,"duration":128},"status":"failed","statusMessage":"AssertionError: 接口请求失败","statusTrace":"self = <testcases.user_manager.test_api.Test_api object at 0x0000024987028220>\ncaseinfo = {'extract': {'access_token': '\"access_token\":\"(.*?)\"', 'expires_in': '$.expires_in'}, 'name': '获得统一接口鉴权码-secret为空', 'p... 41003]], 'request': {'params': {'appid': 'wxe4bbfbe0313806e6', 'grant_type': 'client_credential', 'secret': ''}}, ...}\n\n    @allure.story(\"获取统一鉴权码\")#接口名称\n    @pytest.mark.parametrize(\"caseinfo\",parametrize_ddt(\"/testcases/user_manager/test_token.yaml\"))\n    def test_get_token(self,caseinfo):\n        allure.dynamic.title(\"test_token\")\n>       RequestUtil(debug_talk()).standard_yaml_testcase(caseinfo)\n\ntestcases\\user_manager\\test_api.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommons\\request_unit.py:85: in standard_yaml_testcase\n    error_log(\"接口请求失败\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nmessage = '接口请求失败'\n\n    def error_log(message):\n        LoggerUtil().creat_log().error(message)\n        print_log(\"----------接口请求结束----------\\n\")\n>       raise AssertionError(message)\nE       AssertionError: 接口请求失败\n\ncommons\\logger.py:13: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"clear_extract","time":{"start":1655043316658,"stop":1655043316658,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"stepsCount":0,"hasContent":false}],"testStage":{"status":"failed","statusMessage":"AssertionError: 接口请求失败","statusTrace":"self = <testcases.user_manager.test_api.Test_api object at 0x0000024987028220>\ncaseinfo = {'extract': {'access_token': '\"access_token\":\"(.*?)\"', 'expires_in': '$.expires_in'}, 'name': '获得统一接口鉴权码-secret为空', 'p... 41003]], 'request': {'params': {'appid': 'wxe4bbfbe0313806e6', 'grant_type': 'client_credential', 'secret': ''}}, ...}\n\n    @allure.story(\"获取统一鉴权码\")#接口名称\n    @pytest.mark.parametrize(\"caseinfo\",parametrize_ddt(\"/testcases/user_manager/test_token.yaml\"))\n    def test_get_token(self,caseinfo):\n        allure.dynamic.title(\"test_token\")\n>       RequestUtil(debug_talk()).standard_yaml_testcase(caseinfo)\n\ntestcases\\user_manager\\test_api.py:23: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommons\\request_unit.py:85: in standard_yaml_testcase\n    error_log(\"接口请求失败\")\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nmessage = '接口请求失败'\n\n    def error_log(message):\n        LoggerUtil().creat_log().error(message)\n        print_log(\"----------接口请求结束----------\\n\")\n>       raise AssertionError(message)\nE       AssertionError: 接口请求失败\n\ncommons\\logger.py:13: AssertionError","steps":[],"attachments":[{"uid":"1eb9ffaabf025e44","name":"log","source":"1eb9ffaabf025e44.txt","type":"text/plain","size":882}],"parameters":[],"attachmentsCount":1,"shouldDisplayMessage":true,"stepsCount":0,"hasContent":true},"afterStages":[],"labels":[{"name":"epic","value":"微信接口"},{"name":"story","value":"获取统一鉴权码"},{"name":"feature","value":"test_token"},{"name":"parentSuite","value":"testcases.user_manager"},{"name":"suite","value":"test_api"},{"name":"subSuite","value":"Test_api"},{"name":"host","value":"DESKTOP-M5SF1E6"},{"name":"thread","value":"13144-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"testcases.user_manager.test_api"},{"name":"resultFormat","value":"allure2"}],"parameters":[{"name":"caseinfo","value":"{'name': '获得统一接口鉴权码-secret为空', 'request': {'method': 'get', 'url': '/cgi-bin/token?', 'base_url': '${read_config_yaml(base_url)}', 'params': {'grant_type': 'client_credential', 'appid': 'wxe4bbfbe0313806e6', 'secret': ''}}, 'parametrize': [['name', 'appid', 'secret', 'grant_type', 'assert_str'], ['获得统一接口鉴权码-成功获取鉴权码', 'wxe4bbfbe0313806e6', 'bb6300f5bba4c5069d62dd9d99ad39f6', 'client_credential', 'access_token'], ['获得统一接口鉴权码-appid为空', '', 'bb6300f5bba4c5069d62dd9d99ad39f6', 'client_credential', 41002], ['获得统一接口鉴权码-secret为空', 'wxe4bbfbe0313806e6', '', 'client_credential', 41003]], 'extract': {'access_token': '\"access_token\":\"(.*?)\"', 'expires_in': '$.expires_in'}, 'validate': [{'contains': '41003'}]}"}],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":[]},"source":"c19419246e84c284.json","parameterValues":["{'name': '获得统一接口鉴权码-secret为空', 'request': {'method': 'get', 'url': '/cgi-bin/token?', 'base_url': '${read_config_yaml(base_url)}', 'params': {'grant_type': 'client_credential', 'appid': 'wxe4bbfbe0313806e6', 'secret': ''}}, 'parametrize': [['name', 'appid', 'secret', 'grant_type', 'assert_str'], ['获得统一接口鉴权码-成功获取鉴权码', 'wxe4bbfbe0313806e6', 'bb6300f5bba4c5069d62dd9d99ad39f6', 'client_credential', 'access_token'], ['获得统一接口鉴权码-appid为空', '', 'bb6300f5bba4c5069d62dd9d99ad39f6', 'client_credential', 41002], ['获得统一接口鉴权码-secret为空', 'wxe4bbfbe0313806e6', '', 'client_credential', 41003]], 'extract': {'access_token': '\"access_token\":\"(.*?)\"', 'expires_in': '$.expires_in'}, 'validate': [{'contains': '41003'}]}"]}